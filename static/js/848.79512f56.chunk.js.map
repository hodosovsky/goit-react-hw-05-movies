{"version":3,"file":"static/js/848.79512f56.chunk.js","mappings":"+OAEaA,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAmBA,OACE,kBAAMH,SAda,SAAAI,GACnBA,EAAEC,iBACY,KAAVH,IAGJF,EAASE,GARTC,EAAS,IAUV,EAOC,WACE,4BACE,kBACEG,KAAK,OACLC,KAAK,QACLC,YAAY,qBACZC,SAXa,SAAAL,GACnBD,EAASC,EAAEM,OAAOC,MAAMC,cACzB,OAYG,mBAAQN,KAAK,SAAb,sBAGL,E,SCjCKO,E,OAAmBC,GAAAA,GAAH,qI,SC0DtB,EArDmB,WAAO,IAAD,EACjBC,GAAWC,EAAAA,EAAAA,MACjB,GAA0Cf,EAAAA,EAAAA,UAAS,IAAnD,eAAOgB,EAAP,KAAsBC,EAAtB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACM,KAAVF,IAGJG,EAAAA,EAAAA,IAAiBH,GAAOI,MAAK,SAAAC,GAC3BT,EAAiBS,EAAKA,KAAKC,QAC5B,GACF,GAAE,CAACN,IAMJ,OAAKL,GAKH,6BACE,SAAClB,EAAD,CAAYC,SAVQ,SAAAW,GACtBU,EAA0B,KAAVV,EAAe,CAAEW,MAAOX,GAAU,CAAC,EACpD,IASIM,EAAcY,OAAS,IACtB,SAAChB,EAAD,UACGI,EAAca,KAAI,SAAAC,GAAI,aACrB,yBACE,UAAC,KAAD,CAAMC,GAAE,UAAKC,OAAOF,EAAKG,KAAOC,MAAO,CAAEC,KAAMrB,GAA/C,WACE,gBACEsB,IACM,OAAJN,QAAI,IAAJA,GAAAA,EAAMO,YACF,kCAAoCP,EAAKO,YACzCC,EAENC,IAAG,UAAET,EAAK7B,aAAP,QAAgB6B,EAAK7B,MACxBuC,MAAM,SAGR,kBACCV,EAAK7B,UAbD6B,EAAKG,GADO,SARtB,IA8BV,C,+LCzDKQ,EAAU,mCACHC,EAAc,mCAAG,oGACTC,EAAAA,EAAAA,IAAA,gEAC6CF,IAC7DhB,OAHyB,cACtBC,EADsB,yBAKrBA,GALqB,2CAAH,qDA0BdkB,EAAc,mCAAG,WAAMC,GAAN,uFACTF,EAAAA,EAAAA,IAAA,6CACqBE,EADrB,oBACwCJ,IAF/B,cACtBf,EADsB,yBAKrBA,GALqB,2CAAH,sDAQdoB,EAAc,mCAAG,WAAMD,GAAN,uFACTF,EAAAA,EAAAA,IAAA,6CACqBE,EADrB,4BACgDJ,IAFvC,cACtBf,EADsB,yBAKrBA,GALqB,2CAAH,sDAQdqB,EAAgB,mCAAG,WAAMF,GAAN,uFACXF,EAAAA,EAAAA,IAAA,6CACqBE,EADrB,4BACgDJ,IAFrC,cACxBf,EADwB,yBAKvBA,GALuB,2CAAH,sDAQhBF,EAAgB,mCAAG,WAAMwB,GAAN,uFACXL,EAAAA,EAAAA,IAAA,0DACkCK,EADlC,oBACuDP,IAF5C,cACxBf,EADwB,yBAKvBA,GALuB,2CAAH,qD","sources":["components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx","services/ApiService.jsx"],"sourcesContent":["import { useState } from 'react';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n\n  const reset = () => {\n    setTitle('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (title === '') {\n      return;\n    }\n    onSubmit(title);\n    reset();\n  };\n\n  const handleChange = e => {\n    setTitle(e.target.value.toLowerCase());\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input\n          type=\"text\"\n          name=\"input\"\n          placeholder=\"Enter film's title\"\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">search</button>\n    </form>\n  );\n};\n","import styled from 'styled-components';\n\nconst FilmSearchedList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  gap: 20px;\n\n  & li {\n    width: 150px;\n  }\n`;\n\nexport { FilmSearchedList };\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { FetchByMovieName } from 'services/ApiService';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { FilmSearchedList } from './MoviesPage.styled';\nimport defaultposter from '../../images/default-poster.png';\n\nconst MoviesPage = () => {\n  const location = useLocation();\n  const [searchedFilms, setSearchedFilms] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    FetchByMovieName(query).then(data => {\n      setSearchedFilms(data.data.results);\n    });\n  }, [query]);\n\n  const handleSearhFilm = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  if (!searchedFilms) {\n    return null;\n  }\n\n  return (\n    <main>\n      <SearchForm onSubmit={handleSearhFilm} />\n      {searchedFilms.length > 0 && (\n        <FilmSearchedList>\n          {searchedFilms.map(item => (\n            <li key={item.id}>\n              <Link to={`${Number(item.id)}`} state={{ from: location }}>\n                <img\n                  src={\n                    item?.poster_path\n                      ? 'https://image.tmdb.org/t/p/w500' + item.poster_path\n                      : defaultposter\n                  }\n                  alt={item.title ?? item.title}\n                  width=\"100\"\n                ></img>\n\n                <br />\n                {item.title}\n              </Link>\n            </li>\n          ))}\n        </FilmSearchedList>\n      )}\n    </main>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nconst API_KEY = 'dc1eafce510836ca61a79dd47f826d41';\nexport const FetchTopMovies = async () => {\n  const data = await axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`)\n    .then();\n\n  return data;\n};\n\n// export async function FetchMovieByID(movieId) {\n//   return fetch(\n//     `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n//   )\n//     .then(res => {\n//       if (res.status >= 200 && res.status < 300) {\n//         return res.json();\n//       } else {\n//         let error = new Error(res.statusText);\n//         error.response = res;\n//         throw error;\n//       }\n//     })\n//     .then(data => data)\n//     .catch(error => error);\n\n// }\n\nexport const FetchMovieByID = async movieId => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const FetchMovieCast = async movieId => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const FetchMovieReview = async movieId => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const FetchByMovieName = async movieName => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movieName}&api_key=${API_KEY}`\n  );\n\n  return data;\n};\n"],"names":["SearchForm","onSubmit","useState","title","setTitle","e","preventDefault","type","name","placeholder","onChange","target","value","toLowerCase","FilmSearchedList","styled","location","useLocation","searchedFilms","setSearchedFilms","useSearchParams","searchParams","setSearchParams","query","get","useEffect","FetchByMovieName","then","data","results","length","map","item","to","Number","id","state","from","src","poster_path","defaultposter","alt","width","API_KEY","FetchTopMovies","axios","FetchMovieByID","movieId","FetchMovieCast","FetchMovieReview","movieName"],"sourceRoot":""}