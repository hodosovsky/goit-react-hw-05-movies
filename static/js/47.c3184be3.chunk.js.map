{"version":3,"file":"static/js/47.c3184be3.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetailsPage.jsx","services/ApiService.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst DescriptionWrap = styled.div`\n  display: flex;\n\n  gap: 10px;\n`;\n\nexport { DescriptionWrap };\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { FetchMovieByID } from 'services/ApiService';\nimport { Suspense, useEffect, useState } from 'react';\nimport { DescriptionWrap } from './MovieDetails.styled';\nimport defaultposter from '../../images/default-poster.png';\n\nconst MovieByIDPage = () => {\n  const location = useLocation();\n  const [movie, setMovie] = useState([]);\n  const [posterUrl, setPosterUrl] = useState('');\n  const { moveiId } = useParams();\n\n  useEffect(\n    (prevProps, prevState) => {\n      FetchMovieByID(Number(moveiId))\n        .then(film => {\n          const filmDetails = film.data;\n          setMovie(filmDetails);\n\n          let imageURL = 'https://image.tmdb.org/t/p/w500';\n          imageURL = imageURL + filmDetails.poster_path;\n          setPosterUrl(imageURL);\n        })\n        .catch(error => {\n          return;\n        });\n    },\n    [moveiId]\n  );\n  if (!movie) {\n    return null;\n  }\n\n  const backLinkHref = location.state?.from ?? '/';\n  return (\n    <section>\n      <Link to={backLinkHref}> back</Link>\n      {/* {movie !== [] && ( */}\n      {movie !== [] && (\n        <DescriptionWrap className=\"desription\">\n          <div className=\"poster\">\n            <br />\n            <img\n              src={movie?.poster_path ? posterUrl : defaultposter}\n              alt={movie?.poster_path ? movie.title : 'defaultposter'}\n              width=\"200\"\n            />\n          </div>\n          <div>\n            <h2>\n              {movie?.original_title\n                ? movie?.original_title\n                : 'sorry... We have no information about this film'}\n            </h2>\n            {movie?.vote_average > 0 && (\n              <p>User Score: {Math.round(movie?.vote_average * 10)}%</p>\n            )}\n\n            <br />\n            {movie?.overview && (\n              <a href={movie?.homepage} target=\"blanc\">\n                Homepage\n              </a>\n            )}\n            {movie?.overview && <h3>Overview</h3>}\n            <p>{movie?.overview && movie.overview}</p>\n\n            {movie?.genres && <h4>Genres</h4>}\n            {movie?.genres && (\n              <p>{movie.genres.map(genr => genr.name + ' ')}</p>\n            )}\n          </div>\n        </DescriptionWrap>\n      )}\n      <h3>Aditional information</h3>\n      <Link to={`/movies/${moveiId}/cast`} state={{ from: backLinkHref }}>\n        Cast\n      </Link>\n      <br />\n      <br />\n      <Link to={`/movies/${moveiId}/reviews`} state={{ from: backLinkHref }}>\n        Reviews\n      </Link>\n      <Suspense fallback={<p>loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n};\n\nexport default MovieByIDPage;\n","import axios from 'axios';\nconst API_KEY = 'dc1eafce510836ca61a79dd47f826d41';\nexport const FetchTopMovies = async () => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\n// export async function FetchMovieByID(movieId) {\n//   return fetch(\n//     `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n//   )\n//     .then(res => {\n//       if (res.status >= 200 && res.status < 300) {\n//         return res.json();\n//       } else {\n//         let error = new Error(res.statusText);\n//         error.response = res;\n//         throw error;\n//       }\n//     })\n//     .then(data => data)\n//     .catch(error => error);\n\n// }\n\nexport const FetchMovieByID = async movieId => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const FetchMovieCast = async movieId => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const FetchMovieReview = async movieId => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const FetchByMovieName = async movieName => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movieName}&api_key=${API_KEY}`\n  );\n\n  return data;\n};\n"],"names":["DescriptionWrap","styled","location","useLocation","useState","movie","setMovie","posterUrl","setPosterUrl","moveiId","useParams","useEffect","prevProps","prevState","FetchMovieByID","Number","then","film","filmDetails","data","imageURL","poster_path","catch","error","backLinkHref","state","from","to","className","src","defaultposter","alt","title","width","original_title","vote_average","Math","round","overview","href","homepage","target","genres","map","genr","name","Suspense","fallback","API_KEY","FetchTopMovies","axios","movieId","FetchMovieCast","FetchMovieReview","FetchByMovieName","movieName"],"sourceRoot":""}